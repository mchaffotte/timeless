subprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply from: "$rootDir/gradle/integration-test.gradle"

    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    compileJava {
        options.encoding = 'UTF-8'
    }

    compileTestJava {
        options.encoding = 'UTF-8'
    }

    compileIntegTestJava {
        options.encoding = 'UTF-8'
    }

    javadoc {
        options.encoding = 'UTF-8'
    }

    repositories {
        mavenLocal()
        jcenter()
    }

    group 'fr.chaffotm.timeless'
    version '0.1-SNAPSHOT'

    ext {
        junitVersion = '5.5.2'
        assertjVersion = '3.13.2'
    }

    dependencies {
        testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
        testImplementation "org.assertj:assertj-core:$assertjVersion"
        testImplementation 'org.mockito:mockito-junit-jupiter:3.1.0'

        integTestImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
        integTestRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
        integTestImplementation "org.assertj:assertj-core:$assertjVersion"
    }

    test {
        useJUnitPlatform()
        beforeTest { descriptor ->
            logger.lifecycle("Running " + descriptor)
        }
    }
    test.outputs.upToDateWhen { false }

    integrationTest {
        useJUnitPlatform()
        beforeTest { descriptor ->
            logger.lifecycle("Running " + descriptor)
        }
    }
    integrationTest.outputs.upToDateWhen { false }
}

wrapper {
    gradleVersion = '5.6.2'
}